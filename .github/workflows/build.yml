name: pdf4oereb CI

on: 
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: foo
        run: echo ${{ success() }} && github.ref == 'refs/heads/master'

      # - name: Build with Gradle
      #   run: ./gradlew -i clean app:build app:assembleDist

      # - uses: actions/upload-artifact@v2
      #   if: ${{ failure() }}
      #   with:
      #     name: reports
      #     path: app/build/reports/tests/

      # - name: Decode key ring file
      #   if: ${{ success() }} && github.ref == 'refs/heads/master'
      #   run: |
      #     echo "${{secrets.SIGNING_SECRET_KEY_RING_FILE}}" > ~/.gradle/sonatype_upload.gpg.b64
      #     base64 -d ~/.gradle/sonatype_upload.gpg.b64 > ~/.gradle/sonatype_upload.gpg

      # - name: Publish Jar file
      #   if: ${{ success() }} && github.ref == 'refs/heads/master'
      #   run: ./gradlew -i publishToSonatype closeAndReleaseSonatypeStagingRepository -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} -Psigning.password=${{secrets.SIGNING_PASSWORD}} -Psigning.secretKeyRingFile=$(echo ~/.gradle/sonatype_upload.gpg)
      #   env:
      #     OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
      #     OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}

      # - name: Release 
      #   run: |
      #     ./gradlew -i app:jreleaserRelease
      #   env:
      #     JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ success() }} && ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}
